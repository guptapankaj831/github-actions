# timeout-minutes: 1 - Give timeout to execute an step in minute. This can be used in Job Level also.
# Default value for 'timeout-minutes' is 360 minute.
# continue-on-error: true - Prevent the entire job failing, if current step fail

name: Status Check Function
on: [push]
jobs:
  job-1:
    runs-on: ubuntu-latest
    # Job Level timeout
    # timeout-minutes: 1
    steps:
      - name: Step 1
        run: sleep 90
        # Very Imp. Give timeout to execute an step in minute. This can be used in Job Level also.
        timeout-minutes: 1
      - name: Step 2
        id: step-2
        # Very Imp. Below line will prevent the entire job failing, if step-2 fail
        continue-on-error: true
        run: exit 1
      - name: Runs on Specific Failure
        # If step with id 'step-2' fails then only below step will execute.
        if: failure() && steps.step-2.conclusion == 'failure'
        run: echo 'Step 2 has failed'
      - name: Runs on every Failure
        # 'failure()' returns 'true' when any previous step of job fails.
        if: failure()
        run: echo 'Runs only on failure'
      - name: Runs on Success
        # This is not needed, as 'success' is default behaviour.
        # 'success()' is applied bydefault to every 'if' statement unless you override it's behaviour. 
        if: success()
        run: echo 'Runs on Success'
      - name: Always Runs
        # if : success() || failure() # This is same as below.
        if: always()
        run: echo 'Always Run'
      - name: Runs when cancelled
        if: cancelled()
        run: echo 'Runs on Cancelled'
  
  job-2:
    runs-on: ubuntu-latest
    needs: job-1
    if: failure()
    steps:
      - run: echo 'Job 2'